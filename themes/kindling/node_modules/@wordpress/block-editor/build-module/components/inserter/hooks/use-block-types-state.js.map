{"version":3,"names":["createBlock","createBlocksFromInnerBlocksTemplate","store","blocksStore","parse","useSelect","useCallback","useMemo","blockEditorStore","withRootClientIdOptionKey","useBlockTypesState","rootClientId","onInsert","isQuick","options","items","select","getInserterItems","categories","collections","getCategories","getCollections","onSelectItem","name","initialAttributes","innerBlocks","syncStatus","content","_rootClientId","shouldFocusBlock","insertedBlock","__unstableSkipMigrationLogs","undefined"],"sources":["@wordpress/block-editor/src/components/inserter/hooks/use-block-types-state.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tcreateBlock,\n\tcreateBlocksFromInnerBlocksTemplate,\n\tstore as blocksStore,\n\tparse,\n} from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport { useCallback, useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../../store';\nimport { withRootClientIdOptionKey } from '../../../store/utils';\n\n/**\n * Retrieves the block types inserter state.\n *\n * @param {string=}  rootClientId Insertion's root client ID.\n * @param {Function} onInsert     function called when inserter a list of blocks.\n * @param {boolean}  isQuick\n * @return {Array} Returns the block types state. (block types, categories, collections, onSelect handler)\n */\nconst useBlockTypesState = ( rootClientId, onInsert, isQuick ) => {\n\tconst options = useMemo(\n\t\t() => ( { [ withRootClientIdOptionKey ]: ! isQuick } ),\n\t\t[ isQuick ]\n\t);\n\tconst [ items ] = useSelect(\n\t\t( select ) => [\n\t\t\tselect( blockEditorStore ).getInserterItems(\n\t\t\t\trootClientId,\n\t\t\t\toptions\n\t\t\t),\n\t\t],\n\t\t[ rootClientId, options ]\n\t);\n\n\tconst [ categories, collections ] = useSelect( ( select ) => {\n\t\tconst { getCategories, getCollections } = select( blocksStore );\n\t\treturn [ getCategories(), getCollections() ];\n\t}, [] );\n\n\tconst onSelectItem = useCallback(\n\t\t(\n\t\t\t{\n\t\t\t\tname,\n\t\t\t\tinitialAttributes,\n\t\t\t\tinnerBlocks,\n\t\t\t\tsyncStatus,\n\t\t\t\tcontent,\n\t\t\t\trootClientId: _rootClientId,\n\t\t\t},\n\t\t\tshouldFocusBlock\n\t\t) => {\n\t\t\tconst insertedBlock =\n\t\t\t\tsyncStatus === 'unsynced'\n\t\t\t\t\t? parse( content, {\n\t\t\t\t\t\t\t__unstableSkipMigrationLogs: true,\n\t\t\t\t\t  } )\n\t\t\t\t\t: createBlock(\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tinitialAttributes,\n\t\t\t\t\t\t\tcreateBlocksFromInnerBlocksTemplate( innerBlocks )\n\t\t\t\t\t  );\n\n\t\t\tonInsert(\n\t\t\t\tinsertedBlock,\n\t\t\t\tundefined,\n\t\t\t\tshouldFocusBlock,\n\t\t\t\t_rootClientId\n\t\t\t);\n\t\t},\n\t\t[ onInsert ]\n\t);\n\n\treturn [ items, categories, collections, onSelectItem ];\n};\n\nexport default useBlockTypesState;\n"],"mappings":"AAAA;AACA;AACA;AACA,SACCA,WAAW,EACXC,mCAAmC,EACnCC,KAAK,IAAIC,WAAW,EACpBC,KAAK,QACC,mBAAmB;AAC1B,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,WAAW,EAAEC,OAAO,QAAQ,oBAAoB;;AAEzD;AACA;AACA;AACA,SAASL,KAAK,IAAIM,gBAAgB,QAAQ,gBAAgB;AAC1D,SAASC,yBAAyB,QAAQ,sBAAsB;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,kBAAkB,GAAGA,CAAEC,YAAY,EAAEC,QAAQ,EAAEC,OAAO,KAAM;EACjE,MAAMC,OAAO,GAAGP,OAAO,CACtB,OAAQ;IAAE,CAAEE,yBAAyB,GAAI,CAAEI;EAAQ,CAAC,CAAE,EACtD,CAAEA,OAAO,CACV,CAAC;EACD,MAAM,CAAEE,KAAK,CAAE,GAAGV,SAAS,CACxBW,MAAM,IAAM,CACbA,MAAM,CAAER,gBAAiB,CAAC,CAACS,gBAAgB,CAC1CN,YAAY,EACZG,OACD,CAAC,CACD,EACD,CAAEH,YAAY,EAAEG,OAAO,CACxB,CAAC;EAED,MAAM,CAAEI,UAAU,EAAEC,WAAW,CAAE,GAAGd,SAAS,CAAIW,MAAM,IAAM;IAC5D,MAAM;MAAEI,aAAa;MAAEC;IAAe,CAAC,GAAGL,MAAM,CAAEb,WAAY,CAAC;IAC/D,OAAO,CAAEiB,aAAa,CAAC,CAAC,EAAEC,cAAc,CAAC,CAAC,CAAE;EAC7C,CAAC,EAAE,EAAG,CAAC;EAEP,MAAMC,YAAY,GAAGhB,WAAW,CAC/B,CACC;IACCiB,IAAI;IACJC,iBAAiB;IACjBC,WAAW;IACXC,UAAU;IACVC,OAAO;IACPhB,YAAY,EAAEiB;EACf,CAAC,EACDC,gBAAgB,KACZ;IACJ,MAAMC,aAAa,GAClBJ,UAAU,KAAK,UAAU,GACtBtB,KAAK,CAAEuB,OAAO,EAAE;MAChBI,2BAA2B,EAAE;IAC7B,CAAE,CAAC,GACH/B,WAAW,CACXuB,IAAI,EACJC,iBAAiB,EACjBvB,mCAAmC,CAAEwB,WAAY,CACjD,CAAC;IAELb,QAAQ,CACPkB,aAAa,EACbE,SAAS,EACTH,gBAAgB,EAChBD,aACD,CAAC;EACF,CAAC,EACD,CAAEhB,QAAQ,CACX,CAAC;EAED,OAAO,CAAEG,KAAK,EAAEG,UAAU,EAAEC,WAAW,EAAEG,YAAY,CAAE;AACxD,CAAC;AAED,eAAeZ,kBAAkB","ignoreList":[]}