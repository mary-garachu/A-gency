"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tab = void 0;
var Ariakit = _interopRequireWildcard(require("@ariakit/react"));
var _element = require("@wordpress/element");
var _warning = _interopRequireDefault(require("@wordpress/warning"));
var _context = require("./context");
var _styles = require("./styles");
var _icons = require("@wordpress/icons");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const Tab = exports.Tab = (0, _element.forwardRef)(function Tab({
  children,
  tabId,
  disabled,
  render,
  ...otherProps
}, ref) {
  var _useTabsContext;
  const {
    store,
    instanceId
  } = (_useTabsContext = (0, _context.useTabsContext)()) !== null && _useTabsContext !== void 0 ? _useTabsContext : {};

  // If the active item is not connected, the tablist may end up in a state
  // where none of the tabs are tabbable. In this case, we force all tabs to
  // be tabbable, so that as soon as an item received focus, it becomes active
  // and Tablist goes back to working as expected.
  // eslint-disable-next-line @wordpress/no-unused-vars-before-return
  const tabbable = Ariakit.useStoreState(store, state => {
    return state?.activeId !== null && !store?.item(state?.activeId)?.element?.isConnected;
  });
  if (!store) {
    globalThis.SCRIPT_DEBUG === true ? (0, _warning.default)('`Tabs.Tab` must be wrapped in a `Tabs` component.') : void 0;
    return null;
  }
  const instancedTabId = `${instanceId}-${tabId}`;
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_styles.Tab, {
    ref: ref,
    store: store,
    id: instancedTabId,
    disabled: disabled,
    render: render,
    tabbable: tabbable,
    ...otherProps,
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_styles.TabChildren, {
      children: children
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_styles.TabChevron, {
      icon: _icons.chevronRight
    })]
  });
});
//# sourceMappingURL=tab.js.map