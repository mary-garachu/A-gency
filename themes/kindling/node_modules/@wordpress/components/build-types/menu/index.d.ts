import type { MenuContext as MenuContextType, MenuProps } from './types';
export declare const Menu: import("../context").WordPressComponent<"div", MenuProps & import("react").RefAttributes<any>, false> & {
    Context: import("react").Context<MenuContextType | undefined> & {
        displayName: string;
    };
    Item: import("react").ForwardRefExoticComponent<import("./types").MenuItemProps & Omit<Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref">, "as" | keyof import("./types").MenuItemProps> & import("react").RefAttributes<HTMLDivElement>> & {
        displayName: string;
    };
    RadioItem: import("react").ForwardRefExoticComponent<import("./types").MenuRadioItemProps & Omit<Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref">, "as" | keyof import("./types").MenuRadioItemProps> & import("react").RefAttributes<HTMLDivElement>> & {
        displayName: string;
    };
    CheckboxItem: import("react").ForwardRefExoticComponent<import("./types").MenuCheckboxItemProps & Omit<Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref">, "as" | keyof import("./types").MenuCheckboxItemProps> & import("react").RefAttributes<HTMLDivElement>> & {
        displayName: string;
    };
    Group: import("react").ForwardRefExoticComponent<import("./types").MenuGroupProps & Omit<Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref">, "children" | "as"> & import("react").RefAttributes<HTMLDivElement>> & {
        displayName: string;
    };
    GroupLabel: import("react").ForwardRefExoticComponent<import("./types").MenuGroupLabelProps & Omit<Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref">, "children" | "as"> & import("react").RefAttributes<HTMLDivElement>> & {
        displayName: string;
    };
    Separator: import("react").ForwardRefExoticComponent<import("./types").MenuSeparatorProps & Omit<Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLHRElement>, HTMLHRElement>, "ref">, "children" | "as"> & import("react").RefAttributes<HTMLHRElement>> & {
        displayName: string;
    };
    ItemLabel: import("react").ForwardRefExoticComponent<{
        children: React.ReactNode;
    } & Omit<Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, "ref">, "children" | "as"> & {
        as?: keyof JSX.IntrinsicElements | undefined;
    } & import("react").RefAttributes<HTMLSpanElement>> & {
        displayName: string;
    };
    ItemHelpText: import("react").ForwardRefExoticComponent<{
        children: React.ReactNode;
    } & Omit<Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, "ref">, "children" | "as"> & {
        as?: keyof JSX.IntrinsicElements | undefined;
    } & import("react").RefAttributes<HTMLSpanElement>> & {
        displayName: string;
    };
};
export default Menu;
//# sourceMappingURL=index.d.ts.map